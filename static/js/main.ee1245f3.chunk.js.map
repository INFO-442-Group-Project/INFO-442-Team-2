{"version":3,"sources":["components/stubs/HeaderView.js","components/stubs/mapStyles.js","components/stubs/MapView.js","components/stubs/Alert.js","components/stubs/FindAMealView.js","components/stubs/AboutView.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","resetResults","toggle","bind","state","isOpen","currentUser","this","setState","className","Navbar","dark","expand","to","onClick","NavbarBrand","alt","src","NavbarToggler","Collapse","navbar","Nav","activeClassName","NavItem","Component","featureType","elementType","stylers","color","lightness","visibility","weight","MapView","self","MapWrapped","withScriptjs","withGoogleMap","useState","selectedMeal","setSelectedMeal","useEffect","listener","e","key","window","addEventListener","removeEventListener","defaultZoom","defaultCenter","lat","lng","defaultOptions","styles","mapStyles","meals","map","Meal","properties","Name_of_Program","People_Served","Meal_Served","Days","position","geometry","coordinates","onCloseClick","style","width","height","googleMapURL","process","loadingElement","containerElement","mapElement","WarningAlert","visible","setVisible","Alert","FindAMealView","handleSubmit","preventDefault","console","log","target","zipcode","value","name","mOptions","mealsServed","mealsSelected","push","i","len","length","defaultValue","pOptions","peopleServed","peopleSelected","dOptions","daysServed","daysSelected","filterResults","noResults","main","filtered","submit","onSubmit","align","type","placeholder","isMulti","options","label","closeMenuOnSelect","hideSelectedOptions","classNamePrefix","card","Card","AboutView","images","fetch","then","res","json","data","carouselItems","mealprog","photo","altText","title","id","UncontrolledCarousel","items","indicators","controls","MEALS_DATA_FEATURES","require","features","App","input","allData","dataByZip","filter","element","Number","dataByName","toString","toLowerCase","includes","dataByMealServed","forEach","meal","dataByPeopleServed","person","Gender_Served","dataByDayServed","d","Day","day","filteredResults","Set","path","render","routerProps","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ee1245f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, Collapse } from 'reactstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nexport class Header extends Component {\n    constructor(props) {\n        super(props);\n        this.toggle = this.toggle.bind(this);\n        this.state = {\n            isOpen: false,\n            currentUser: null\n        };\n    }\n    \n    toggle() {\n        this.setState({\n            isOpen: !this.state.isOpen,\n            currentUser: this.state.currentUser\n        });\n    }\n\n    resetResults = () => {\n        this.props.resetResults()\n    }\n\n    render() {\n        return(\n            <div className=\"header\">\n                <Navbar className=\"navbar\" dark expand=\"lg\">\n                    <LinkContainer to=\"/find\" onClick={this.resetResults}>\n                    <NavbarBrand className=\"home-link\">\n                        <img className=\"icon\" alt=\"plate logo\" src=\"images/plate-green-circle.png\"/>\n                        <h1 className=\"title\">Seattle Sustenance</h1>\n                    </NavbarBrand>\n                    </LinkContainer>\n                <NavbarToggler onClick={this.toggle} />\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className=\"ml-auto\" navbar>\n                        <LinkContainer to=\"/about\" onClick={this.resetResults} activeClassName=\"curr-link\" className=\"nav-item\">\n                            <NavItem className=\"nav-link\"> <p>About</p></NavItem>\n                        </LinkContainer>\n                        <LinkContainer to=\"/find\" onClick={this.resetResults} activeClassName=\"curr-link\" className=\"nav-item\">\n                            <NavItem className=\"nav-link\"> <p>Find a Meal Program</p></NavItem>\n                        </LinkContainer>\n                    </Nav>\n                </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nexport default Header; \n","export default [\n  {\n    featureType: \"water\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#004358\"\n      }\n    ]\n  },\n  {\n    featureType: \"landscape\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#1f8a70\"\n      }\n    ]\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#1f8a70\"\n      }\n    ]\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#FFCE89\"\n      }\n    ]\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#1f8a70\"\n      },\n      {\n        lightness: -20\n      }\n    ]\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#1f8a70\"\n      },\n      {\n        lightness: -17\n      }\n    ]\n  },\n  {\n    elementType: \"labels.text.stroke\",\n    stylers: [\n      {\n        color: \"#ffffff\"\n      },\n      {\n        visibility: \"on\"\n      },\n      {\n        weight: 0.9\n      }\n    ]\n  },\n  {\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        visibility: \"on\"\n      },\n      {\n        color: \"#ffffff\"\n      }\n    ]\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"labels\",\n    stylers: [\n      {\n        visibility: \"simplified\"\n      }\n    ]\n  },\n  {\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"off\"\n      }\n    ]\n  },\n  {\n    featureType: \"transit\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#1f8a70\"\n      },\n      {\n        lightness: -10\n      }\n    ]\n  },\n  {},\n  {\n    featureType: \"administrative\",\n    elementType: \"geometry\",\n    stylers: [\n      {\n        color: \"#1f8a70\"\n      },\n      {\n        weight: 0.7\n      }\n    ]\n  }\n];","import React, { Component, useState, useEffect } from \"react\";\nimport {\n    withGoogleMap,\n    withScriptjs,\n    GoogleMap,\n    Marker,\n    InfoWindow\n} from \"react-google-maps\";\nimport mapStyles from \"./mapStyles\";\n\n\nclass MapView extends Component {\n\n    // displays Map based on state\n    render() {\n        let self = this;\n\n        function Map() {\n            const [selectedMeal, setSelectedMeal] = useState(null);\n\n            useEffect(() => {\n                const listener = e => {\n                    if (e.key === \"Escape\") {\n                        setSelectedMeal(null);\n                    }\n                };\n                window.addEventListener(\"keydown\", listener);\n    \n                return () => {\n                    window.removeEventListener(\"keydown\", listener);\n                };\n            }, []);\n    \n            return (\n                <GoogleMap\n                    defaultZoom={10}\n                    defaultCenter={{ lat: 47.623047, lng: -122.349624 }}\n                    defaultOptions={{ styles: mapStyles }}\n                >\n                    {self.props.meals.map(Meal => (\n                        <Marker\n                            key={Meal.properties.Name_of_Program + \" \" + Meal.properties.People_Served \n                            + \" \" + Meal.properties.Meal_Served + \" \" + Meal.properties.Days}\n                            position={{\n                                lat: Meal.geometry.coordinates[0],\n                                lng: Meal.geometry.coordinates[1]\n                            }}\n                            onClick={() => {\n                                setSelectedMeal(Meal);\n                            }}\n                            \n\n                        />\n                    ))}\n\n                    {selectedMeal && (\n                        <InfoWindow\n                            onCloseClick={() => {\n                                setSelectedMeal(null);\n                            }}\n                            position={{\n                                lat: selectedMeal.geometry.coordinates[0],\n                                lng: selectedMeal.geometry.coordinates[1]\n                            }}>\n                            <div>\n                                <h2>{selectedMeal.properties['Name_of_Program']}</h2>\n                                <p>{selectedMeal.properties['Location']}</p>\n                                <p>Days Served: {selectedMeal.properties['Days']}</p>\n                                <p>{selectedMeal.properties['Meal_Served']}: {selectedMeal.properties['Time_Start']} - {selectedMeal.properties['Time_End']}</p>\n                                <p>People Served: {selectedMeal.properties['People_Served']}</p>\n                            </div>\n                        </InfoWindow>\n                    )}\n                </GoogleMap>\n            );\n        }\n\n        let MapWrapped = withScriptjs(withGoogleMap(Map));\n\n        return(\n        <div className=\"mapSize\" style={{ width: \"100%\", height: \"100vh\" }}>\n            <MapWrapped\n                googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n                loadingElement={<div style={{ height: `100%` }} />}\n                containerElement={<div style={{ height: `100%` }} />}\n                mapElement={<div className=\"mapcontainer\" />}\n            />\n        </div>\n        )\n    }\n}\n\nexport default MapView;","import React, { useState } from 'react';\nimport { Alert } from 'reactstrap';\n\nconst WarningAlert = (props) => {\n    const [visible, setVisible] = useState(true);\n\n    const onDismiss = () => setVisible(false);\n\n    return (\n        <Alert color=\"warning\" isOpen={visible} toggle={onDismiss}>\n            No results found. Please refine your search.\n        </Alert>\n    );\n}\n\nexport default WarningAlert;","import React, { Component } from \"react\";\nimport { Card } from \"reactstrap\";\nimport Select from \"react-select\";\nimport { Header } from \"./HeaderView\";\nimport MapView from \"./MapView\";\nimport WarningAlert from \"./Alert\";\n\n\nclass FindAMealView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zipcode: \"\",\n      name: \"\",\n      mealsServed: [],\n      peopleServed: [],\n      daysServed: [],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(e.target.zipcode.value)\n    console.log(e.target.name.value)\n\n    let mOptions = e.target.mealsServed;\n    let mealsSelected = [];\n    if (mOptions.value) {\n      mealsSelected.push(mOptions.value)\n    } else if (typeof mOptions !== 'undefined') {\n      for (let i = 0, len = mOptions.length; i < len; i++) {\n        mealsSelected.push(mOptions[i].defaultValue);\n      }\n    }  \n\n    let pOptions = e.target.peopleServed;\n    let peopleSelected = [];\n    if (pOptions.value) {\n      peopleSelected.push(pOptions.value)\n    } else if (typeof pOptions !== 'undefined') {\n      for (let i = 0, len = pOptions.length; i < len; i++) {\n        peopleSelected.push(pOptions[i].defaultValue);\n      }\n    }\n\n    let dOptions = e.target.daysServed;\n    let daysSelected = [];\n    if (dOptions.value) {\n      daysSelected.push(dOptions.value)\n    } else if (typeof dOptions !== 'undefined') {\n      for (let i = 0, len = dOptions.length; i < len; i++) {\n        daysSelected.push(dOptions[i].defaultValue);\n      }\n    } \n\n    console.log(mealsSelected)\n    console.log(peopleSelected)\n    console.log(daysSelected)\n\n    this.setState({\n      zipcode: e.target.zipcode.value,\n      name: e.target.name.value,\n      mealsServed: mealsSelected,\n      peopleServed: peopleSelected,\n      daysServed: daysSelected,\n    }, () => this.props.filterResults(this.state))\n  };\n\n  resetResults = () => {\n    this.props.resetResults()\n  }\n\n  render() {\n    let mealOptions = [\n      { value: \"breakfast\", label: \"Breakfast\" },\n      { value: \"lunch\", label: \"Lunch\" },\n      { value: \"dinner\", label: \"Dinner\" },\n      { value: \"snack\", label: \"Snack\" },\n      { value: \"any\", label: \"Any\" },\n    ];\n\n    let peopleOptions = [\n      { value: \"women\", label: \"Women\" },\n      { value: \"men\", label: \"Men\" },\n      { value: \"youth\", label: \"Youth\" },\n      { value: \"any\", label: \"Any\" },\n    ];\n\n    let dayOptions = [\n      { value: \"sunday\", label: \"Sunday\" },\n      { value: \"monday\", label: \"Monday\" },\n      { value: \"tuesday\", label: \"Tuesday\" },\n      { value: \"wednesday\", label: \"Wednesday\" },\n      { value: \"thursday\", label: \"Thursday\" },\n      { value: \"friday\", label: \"Friday\" },\n      { value: \"saturday\", label: \"Saturday\" },\n      { value: \"any\", label: \"Any\" },\n    ];\n\n    let meals = this.props.meals;\n    let main = null;\n    let noResults;\n    if (this.props.filtered === true && this.props.meals.length === 0) {\n      noResults = <WarningAlert/>\n    }\n\n    if (this.props.filtered === false || (this.props.submit === true && this.props.meals.length === 0)) {\n      main = (\n        <form className=\"test\" onSubmit={this.handleSubmit}>\n          <p align=\"center\">find the right program for you</p>\n          <hr></hr>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"zipcode\"\n              placeholder=\"search by zip code...\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"search by name...\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <Select\n              isMulti\n              name=\"mealsServed\"\n              options={mealOptions}\n              closeMenuOnSelect={false}\n              hideSelectedOptions={false}\n              className=\"basic-multi-select\"\n              classNamePrefix=\"select\"\n              placeholder=\"meal served\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <Select\n              isMulti\n              name=\"peopleServed\"\n              options={peopleOptions}\n              closeMenuOnSelect={false}\n              hideSelectedOptions={false}\n              className=\"basic-multi-select\"\n              classNamePrefix=\"select\"\n              placeholder=\"people served\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <Select\n              isMulti\n              name=\"daysServed\"\n              options={dayOptions}\n              closeMenuOnSelect={false}\n              hideSelectedOptions={false}\n              className=\"basic-multi-select\"\n              classNamePrefix=\"select\"\n              placeholder=\"day served\"\n            />\n          </div>\n          <div className=\"row justify-content-center\">\n            <button type=\"submit\" className=\"go-button\" onSubmit={this.handleSubmit}>\n              go\n            </button>\n          </div>\n        </form>\n      );\n    } else {\n      main = (\n            <div className=\"form-group my-cards scrollbar scrollbar-primary\">\n            <div className=\"card-container\">\n                {meals.map((card, i) => {\n                return (\n                    <Card>\n                    <p className=\"program-name\">{meals[i].properties[\"Name_of_Program\"]}</p>\n                    <p className=\"people-served\">{meals[i].properties[\"People_Served\"]}</p>\n                    <p className=\"days-served\">Days Served: {meals[i].properties[\"Days\"]}</p>\n                    <p className=\"meal-served\">{meals[i].properties[\"Meal_Served\"]}: {meals[i].properties[\"Time_Start\"]}-\n                        {meals[i].properties[\"Time_End\"]}</p>\n                    <p className=\"location-served\">{meals[i].properties[\"Location\"] + \" \" + meals[i].properties[\"Zipcode\"]}</p>\n                    </Card>\n                );\n                })}\n                </div>\n            </div>\n      );\n    }\n\n    return (\n      <div>\n        <Header resetResults={this.resetResults}/>\n        {noResults}\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"filter-form col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4\">\n              {main}\n            </div>\n            <div className=\"col-12 col-sm-12 col-md-8 col-lg-8 col-xl-8 filter-form\">\n              <MapView meals={this.props.meals}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FindAMealView;\n","import React, { Component } from \"react\";\nimport { Header } from \"./HeaderView\";\nimport { UncontrolledCarousel } from \"reactstrap\";\n\nclass AboutView extends Component {\n  constructor() {\n    super();\n    this.state = {\n      images: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"aboutview.json\")\n      .then((res) => res.json())\n      .then((data) => this.setState({ images: data }));\n  }\n\n  resetResults = () => {\n    this.props.resetResults();\n  };\n\n  render() {\n    let mealprogs = this.state.images;\n\n    let carouselItems = mealprogs.map(function (mealprog) {\n      let obj = { src: mealprog.photo, altText: mealprog.title };\n      return obj;\n    });\n\n    return (\n      <div>\n        <div>\n          <Header resetResults={this.resetResults} />\n        </div>\n\n        <div className=\"about-page\">\n          <h1 className=\"about-header\" id='main-header'>\n            Meal Programs for Seattle's Homeless and Low Income\n          </h1>\n\n          <p className=\"about-intro-content\">\n            Seattle Sustenance connects low-income and homeless citizens of\n            Seattle with free meal services, alleviating food insecurity and\n            starvation.\n          </p>\n\n          <div className=\"about-step-container\">\n            <div className=\"about-steps\">\n              <div className=\"step-number\">\n                <h1>01</h1>\n              </div>\n              <div className=\"step-info\">\n                <p>Browse all of the available meal programs in King County.</p>\n              </div>\n            </div>\n\n            <div className=\"about-steps\">\n              <div className=\"step-number\">\n                <h1>02</h1>\n              </div>\n              <div className=\"step-info\">\n                <p>\n                  Filter through meal programs based on your needs and\n                  preferences.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"about-steps\">\n              <div className=\"step-number\">\n                <h1>03</h1>\n              </div>\n              <div className=\"step-info\">\n                <p>\n                  Find the right meal program for you, and get directions there.\n                </p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"about-section\">\n            <h1 className=\"about-header\">Food Insecurities</h1>\n\n            <div className=\"insec-container\">\n              <div className=\"insec-info\">\n                <p>\n                  What makes food insecurity difficult to solve is its\n                  underlying causes—poverty, income inequality, and lack of\n                  affordable housing.\n                </p>\n\n                <p>\n                  Consequently, hunger often precedes homelessness because\n                  people who are forced to decide between paying for housing or\n                  groceries will, more often than not, choose the former. 1 in\n                  10 Washington citizens struggle with hunger on a daily basis\n                  and we would like to provide a resource that helps them have\n                  an equal opportunity to a meal.\n                </p>\n\n                <p>\n                  For those impacted by hunger, free meal services do exist.\n                  However, even these services can prevent certain individuals\n                  from receiving a meal. Meal services are not created equal and\n                  many come with a set of requirements to get access. These\n                  requirements can range from ethnicity to age and might only be\n                  available upon arrival to the facility, leaving those that\n                  don’t fit the requirements to continue looking for a meal.\n                </p>\n              </div>\n\n              <div className=\"insec-carousel\">\n                <UncontrolledCarousel\n                  className=\"about-caro\"\n                  items={carouselItems}\n                  indicators={false}\n                  controls={true}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"about-section\">\n            <h1 className=\"about-header\">About the Team</h1>\n\n            <div className=\"about-card-container\">\n              <div className=\"row\">\n                <div className=\"team-card col-8 col-sm-8 col-md-5 col-lg-3 col-xl-3 mx-auto p-2\">\n                  <div className=\"card-photo\" id=\"kaitlyn-photo\"></div>\n\n                  <h2>Kaitlyn Cameron</h2>\n\n                  <p>\n                    Hi, my name is Kaitlyn Cameron and I’m a graduating senior\n                    at the University of Washington. During my time at school, I\n                    studied Informatics with a focus in Human-Computer\n                    Interaction. I love spending time with my friends, taking\n                    road trips and being outdoors.\n                  </p>\n                </div>\n\n                <div className=\"team-card col-8 col-sm-8 col-md-5 col-lg-3 col-xl-3 mx-auto p-2\">\n                  <div className=\"card-photo\" id=\"kevin-photo\"></div>\n\n                  <h2>Kevin Nguyen</h2>\n\n                  <p>\n                    I'm Kevin, and I am a graduating Informatics senior, with a\n                    concentration of Data Science and Human-Computer\n                    Interaction. In the future, I hope to create accesible\n                    software, or bring value to data. During my summers, I love\n                    exploring places I haven't been to before.\n                  </p>\n                </div>\n\n                <div className=\"team-card col-8 col-sm-8 col-md-5 col-lg-3 col-xl-3 mx-auto p-2\">\n                  <div className=\"card-photo\" id=\"rachel-photo\"></div>\n\n                  <h2>Rachel Vuu</h2>\n\n                  <p>\n                    Hi! I’m Rachel, a graduating senior studying Informatics at\n                    the University of Washington. I am passionate about software\n                    engineering and bridging the gap between people,\n                    information, and technology. In my spare time, I enjoy\n                    attending festivals and finding new places to eat.\n                  </p>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"team-card col-8 col-sm-8 col-md-5 col-lg-3 col-xl-3 mx-auto\">\n                  <div className=\"card-photo\" id=\"robert-photo\"></div>\n\n                  <h2>Robert G</h2>\n\n                  <p>\n                    Hi, my name is Robert Goertz and I’m a graduating senior\n                    studying Informatics - HCI at the University of Washington.\n                    I’m passionate about crafting great user experiences and in\n                    my spare time I enjoy Motorsports and traveling.\n                  </p>\n                </div>\n                <div className=\"team-card col-8 col-sm-8 col-md-5 col-lg-3 col-xl-3 mx-auto\">\n                  <div className=\"card-photo\" id=\"soham-photo\"></div>\n\n                  <h2>Soham Hinduja</h2>\n\n                  <p>\n                    Soham is a graduating senior studying Informatics at the\n                    University of Washington with a specilization in HCI. He\n                    aims to be a UX Designer going into the industry as he is\n                    fascinated by the intersection of creativity and technology\n                    of this field.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AboutView;\n\n/* Old UI\n          <div className='about-site-usage'>\n            <div className=\"about-content\">\n              <p>Browse all of the available meal programs in King County.</p>\n              \n              <p>\n                Or, filter through meal programs based on your needs and\n                preferences.\n              </p>\n             \n              <p>\n                Find the right meal program for you, and get directions there.\n              </p>\n            </div>\n\n            <div className=\"about-container\">\n              <UncontrolledCarousel\n                className=\"about-caro\"\n                items={carouselItems}\n                indicators={false}\n                controls={true}\n              />\n            </div>\n          </div>\n\n\n*/\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport FindAMealView from './components/stubs/FindAMealView';\nimport AboutView from './components/stubs/AboutView';\nconst MEALS_DATA = require(\"./components/stubs/data/meal_programs.json\");\nconst MEALS_DATA_FEATURES = MEALS_DATA.features;\n\n/* An array of meal objects\nmeals: [\n  {\n    properties: {\n      Day: [\"\"],\n      Time_Start: \"\",\n      Time_End: \"\",\n      Meal_Served: [\"\"],\n      Age_Served: \"\",\n      Gender_Served: \"\",\n      People_Served: \"\",\n      Location: \"\",\n      Name_of_Program: \"\",\n    },\n    geometry: {\n      Type: \"Point\",\n      coordinates: [],\n    }\n  },\n]\n*/\n\nexport class App extends Component {\n  constructor() {\n    let meals = MEALS_DATA_FEATURES;\n    super();\n    this.state = {\n      meals: meals,\n      submit: false,\n      filtered: false,\n    }\n    this.resetResults = this.resetResults.bind(this);\n    this.filterResults = this.filterResults.bind(this);\n  }\n\n  resetResults = () => {\n    this.setState({\n      meals: MEALS_DATA_FEATURES,\n      submit: false,\n      filtered: false,\n    }, () => console.log(this.state))\n  }\n\n  // use the user filters to apply to the csv\n  filterResults(input) {\n    let allData = MEALS_DATA_FEATURES\n\n    let dataByZip = []\n    if (input.zipcode !== \"\"){\n      allData.filter((element) => {\n        if (Number(element.properties['Zipcode']) === Number(input.zipcode)) {\n          dataByZip.push(element)\n        }\n        return true;\n      }); \n    } else {\n      dataByZip = allData\n    }\n\n    let dataByName = []\n    if (input.name !== \"\"){\n      dataByZip.filter((element) => {\n        if (element.properties['Name_of_Program'].toString().toLowerCase().includes(input.name.toString().toLowerCase())) {\n          dataByName.push(element)\n        }\n        return true;\n      }); \n    } else {\n      dataByName = dataByZip\n    }\n    \n\n    let dataByMealServed = []\n    if (input.mealsServed.length !== 0){\n      dataByName.filter((element) => {\n        input.mealsServed.forEach((meal) => {\n          if(element.properties.Meal_Served.toLowerCase() === meal.toLowerCase()){\n            dataByMealServed.push(element)\n          }\n        })\n        return true;\n      })\n    } else {\n      dataByMealServed = dataByName;\n    }\n\n    let dataByPeopleServed = []\n    if (input.peopleServed.length !== 0){\n      dataByMealServed.filter((element) => {\n        input.peopleServed.forEach((person) => {\n          if(element.properties.Gender_Served.toLowerCase() === person.toLowerCase() || element.properties.Gender_Served === \"All\"){\n            dataByPeopleServed.push(element)\n          }\n        })\n        return true;\n      })\n    } else {\n      dataByPeopleServed = dataByMealServed\n    }\n\n    let dataByDayServed = []\n    if (input.daysServed.length !== 0){\n      dataByPeopleServed.filter((element) => {\n        input.daysServed.forEach((d) => {\n          element.properties.Day.forEach(day => {\n            if(day.toLowerCase() === d.toLowerCase()){\n              dataByDayServed.push(element)\n            }\n          })\n        })\n        return true;\n      })\n    } else {\n      dataByDayServed = dataByPeopleServed\n    }\n\n    let filteredResults = [...new Set(dataByDayServed)]\n\n    this.setState({\n      meals: filteredResults,\n      submit: true,\n      filtered: true,\n    }) \n  }\n\n  render() {\n\n    return(\n\n      <BrowserRouter>\n\n        <Switch>\n          {/* if currentUrl == '/about', render <AboutView> */}\n          <Route path='/about' render={(routerProps) => (\n            <AboutView {...routerProps} resetResults={this.resetResults}/>\n          )}/>\n\n          {/* if currentUrl == '/find', render <FindAMealView> */}\n          <Route path='/find' render={(routerProps) => (\n            <FindAMealView {...routerProps} meals={this.state.meals} submit={this.state.submit} filtered={this.state.filtered} resetResults={this.resetResults} filterResults={this.filterResults}/>\n          )}/>\n          \n          {/* if currentUrl == '/', render <FindAMealView> */}\n          <Route path='*' render={(routerProps) => (\n            <FindAMealView {...routerProps} meals={this.state.meals} submit={this.state.submit} filtered={this.state.filtered} resetResults={this.resetResults} filterResults={this.filterResults}/>\n          )}/>\n        </Switch>\n\n      </BrowserRouter>\n\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}